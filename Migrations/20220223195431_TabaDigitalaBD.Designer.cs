// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taba_Digital.Data;

namespace Taba_Digital.Migrations
{
    [DbContext(typeof(TabaContext))]
    [Migration("20220223195431_TabaDigitalaBD")]
    partial class TabaDigitalaBD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Taba_Digital.Models.Aldeia", b =>
                {
                    b.Property<int>("Id_Aldeia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("localizacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Aldeia");

                    b.ToTable("Aldeias");
                });

            modelBuilder.Entity("Taba_Digital.Models.Doacoes", b =>
                {
                    b.Property<int>("Id_Doacoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AldeiaId_Aldeia")
                        .HasColumnType("int");

                    b.Property<string>("Data_contribuicoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId_Empresa")
                        .HasColumnType("int");

                    b.Property<int>("PessoaId_Pessoa")
                        .HasColumnType("int");

                    b.HasKey("Id_Doacoes");

                    b.HasIndex("AldeiaId_Aldeia");

                    b.HasIndex("EmpresaId_Empresa");

                    b.HasIndex("PessoaId_Pessoa");

                    b.ToTable("Doacoes");
                });

            modelBuilder.Entity("Taba_Digital.Models.Empresa", b =>
                {
                    b.Property<int>("Id_Empresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Empresa");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Taba_Digital.Models.Necessidades", b =>
                {
                    b.Property<int>("Id_Necessidades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Necessidades");

                    b.ToTable("Necessidades");
                });

            modelBuilder.Entity("Taba_Digital.Models.Pessoa", b =>
                {
                    b.Property<int>("Id_Pessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Pessoa");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("Taba_Digital.Models.Solicita", b =>
                {
                    b.Property<int>("Id_Solicita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AldeiaId_Aldeia")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NecessidadesId_necessidades")
                        .HasColumnType("int");

                    b.HasKey("Id_Solicita");

                    b.HasIndex("AldeiaId_Aldeia");

                    b.HasIndex("NecessidadesId_necessidades");

                    b.ToTable("Solicita");
                });

            modelBuilder.Entity("Taba_Digital.Models.Doacoes", b =>
                {
                    b.HasOne("Taba_Digital.Models.Aldeia", "aldeia")
                        .WithMany("doacoes")
                        .HasForeignKey("AldeiaId_Aldeia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taba_Digital.Models.Empresa", "empresa")
                        .WithMany("doacoes")
                        .HasForeignKey("EmpresaId_Empresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taba_Digital.Models.Pessoa", "pessoa")
                        .WithMany("doacoes")
                        .HasForeignKey("PessoaId_Pessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aldeia");

                    b.Navigation("empresa");

                    b.Navigation("pessoa");
                });

            modelBuilder.Entity("Taba_Digital.Models.Solicita", b =>
                {
                    b.HasOne("Taba_Digital.Models.Aldeia", "aldeia")
                        .WithMany("solicita")
                        .HasForeignKey("AldeiaId_Aldeia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taba_Digital.Models.Necessidades", "necessidades")
                        .WithMany("solicita")
                        .HasForeignKey("NecessidadesId_necessidades")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aldeia");

                    b.Navigation("necessidades");
                });

            modelBuilder.Entity("Taba_Digital.Models.Aldeia", b =>
                {
                    b.Navigation("doacoes");

                    b.Navigation("solicita");
                });

            modelBuilder.Entity("Taba_Digital.Models.Empresa", b =>
                {
                    b.Navigation("doacoes");
                });

            modelBuilder.Entity("Taba_Digital.Models.Necessidades", b =>
                {
                    b.Navigation("solicita");
                });

            modelBuilder.Entity("Taba_Digital.Models.Pessoa", b =>
                {
                    b.Navigation("doacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
